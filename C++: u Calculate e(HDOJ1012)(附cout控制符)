Problem Description: http://acm.hdu.edu.cn/showproblem.php?pid=1012

Output
Output the approximations of e generated by the above formula for the values of n from 0 to 9. The beginning of your output should appear similar to that shown below.

运行样例：

输出
n e
- -----------
0 1
1 2
2 2.5
3 2.666666667
4 2.708333333
参考源码：

#include <iostream>
#include <iomanip>
using namespace std;

int main()
{
    cout << "n e" << endl << "- -----------" << endl;

    for (int n = 0; n <= 9; n++)
    {
        double e(1), pro(1);
        for (int i = 1; i <= n; i++)
        {
            pro *= i;
            e += (1. / pro);
        }
        if (n >= 3)
            cout.setf(ios::fixed);
        cout << n << ' ' << setprecision(9) << e << endl;
    }

    system("pause");
    return 0;
}

cout格式输出：

控制符	描 述
dec	置基数为10
hex	置基数为16
oct	置基数为8
setfill(c)	设填充字符为c
setprecision(n)	设显示小数精度为n位
setw(n)	设域宽为n个字符
setiosflags(ios::fixed)	固定的浮点显示
setiosflags(ios::scientific)	指数表示
setiosflags(ios::left)	左对齐
setiosflags(ios::right)	右对齐
setiosflags(ios::skipws)	忽略前导空白
setiosflags(ios::uppercase)	16进制数大写输出
setiosflags(ios::lowercase)	16进制数小写输出
resetiosflags(ios::*)	终止已设置的输出格式状态

此外，还可等价地通过调用输出流对象cout的成员函数来控制输出格式：
cout.precision(n) = setprecision(n)
cout.width(n) = setw(n)
cout.fill(c) = setfill(c)
cout.setf(ios::*) = setiosflags(ios::*)
cout.unsetf(ios::*) = resetiosflags(ios::*)
