Java自带toString()方法，确实方便了不少，但是要正确使用。数组直接使用toString()的结果是[类型@哈希值]。这是因为Object类中的toString()如下：

/**
 * Returns a string representation of the object. In general, the
 * <code>toString</code> method returns a string that
 * "textually represents" this object. The result should
 * be a concise but informative representation that is easy for a
 * person to read.
 * It is recommended that all subclasses override this method.
 * <p>
 * The <code>toString</code> method for class <code>Object</code>
 * returns a string consisting of the name of the class of which the
 * object is an instance, the at-sign character `<code>@</code>', and
 * the unsigned hexadecimal representation of the hash code of the
 * object. In other words, this method returns a string equal to the
 * value of:
 * <blockquote>
 * <pre>
 * getClass().getName() + '@' + Integer.toHexString(hashCode())
 * </pre></blockquote>
 *
 * @return  a string representation of the object.
 */
public String toString() {
return getClass().getName() + "@" + Integer.toHexString(hashCode());
}

而数组类中并没有对此方法重写(override)，仅仅是重载(overload)为类的静态方法（参见java.util.Arrays）。

所以数组转为字符串应写成：

Arrays.toString(a)

这种方法的toString()是带格式的，也就是说输出的是[a, b, c]，如果仅仅想输出abc则需用以下两种方法：

方法1：直接在构造String时转换。

char[] data = {'a', 'b', 'c'};
String str = new String(data);

方法2：调用String类的方法转换。

String.valueOf(char[] ch)
